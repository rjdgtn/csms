  * Логирование в консоль
  * Разделение на таски и общение через потокобезопасные контейнеры

  * Поток управляющий передачей, шифр/дешифр, слип, отправляет команды в поток обработки команд
    * Поток читающий микрофон.
    * Поток воспроизводящий аудио
  * Поток обрабаюыващий команды
  * поток отправляющий смс

  * Команды содержательные
    * Запрос статуса
    * Запрос последних смс
    * Отправка смс
    * Перезагрузка worker
    * Смена скорости передачи

  * Формат передачи
    * * - начало пакета
    * # - конец пакета
    * последний символ пакета данных - xor всего пакета
    * 0-7 - данные
    * 8 - сигнал пробуждения, сигнал сброса сессии в течении 6 секунд
    * 9 - подтверждение успешного получения

  * Протокол
    1 В режиме ожидания ждет комманды 8 в линии
    2 Отправляет 8
    1 дожидвается окончания 8, отправляет 9
    2 Ждет 9 в течении двух секунд, потом повторяет 8 если не дождался
    2 шлет данные *-#
    1 получает данные, дешифрует, проверяет коректность, в случае неуспеха ничего не шлет в ответ
    2 ждет подтверждения 9 в течении 3 секунд, иначе, повторяет передачу
    1 получив все данные обрабатывает команду передает и передает ответ той же схемой
    оба услышав 8 сбасывют свои состояния и начинают заново


туду:
перезапуск службы без проверки живости
смерть через System.exit(0) на любой эксепшн

вынести шифрование-дешифрование в рабочие потоки
шифровать данные 9 неповторяющимися символами
сигнализировать как об успешном так и о неуспешном получении, повторять через 5 сек при тотальном молчании
минимальный интервал, длительность сигнала настраивать командой
размер буфера чтения - половина длительности сигнала
контрольная сумма в данных а не в сигналах
отдельный сигнал на пробуждение - нельзя пару
удвоенный минимальный буфер

счетчик запусков